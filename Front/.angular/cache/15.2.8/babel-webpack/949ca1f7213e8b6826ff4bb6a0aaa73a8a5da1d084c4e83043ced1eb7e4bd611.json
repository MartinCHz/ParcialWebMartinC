{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(http) {\n    this.http = http;\n  }\n  findBook(id) {\n    return this.http.get(\"http://localhost:8080/crudB/\" + id);\n  }\n  read() {\n    return this.http.get(\"http://localhost:8080/crudB/read\");\n  }\n  create(Book) {\n    return this.http.post(\"http://localhost:8080/crudB/create\", Book);\n  }\n  update(Book) {\n    return this.http.put(\"http://localhost:8080/crudB/update\", Book);\n  }\n  delete(id) {\n    return this.http.delete(\"http://localhost:8080/crud/delete/\" + id);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQ,CAACC,EAAU;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,8BAA8B,GAAGD,EAAE,CAAC;EAClE;EAEAE,IAAI;IACF,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAU,kCAAkC,CAAC;EACnE;EAEAE,MAAM,CAACC,IAAS;IACd,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAQ,oCAAoC,EAACD,IAAI,CAAC;EACzE;EAEAE,MAAM,CAACF,IAAS;IACd,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAQ,oCAAoC,EAACH,IAAI,CAAC;EACxE;EAEAI,MAAM,CAACR,EAAU;IACf,OAAO,IAAI,CAACF,IAAI,CAACU,MAAM,CAAQ,oCAAoC,GAAGR,EAAE,CAAC;EAC3E;;AAtBWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["BookService","constructor","http","findBook","id","get","read","create","Book","post","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\marti\\ParcialWebChen\\ParcialWebMartinA\\src\\app\\shared\\Book.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Book } from '../model/Book';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findBook(id: number) : Observable<Book> {\r\n    return this.http.get<Book> (\"http://localhost:8080/crudB/\" + id);\r\n  }\r\n\r\n  read(): Observable<Book[]>{\r\n    return this.http.get<Book[]> (\"http://localhost:8080/crudB/read\");\r\n  }\r\n\r\n  create(Book:Book): Observable<Book>{\r\n    return this.http.post<Book> (\"http://localhost:8080/crudB/create\",Book);\r\n  }\r\n\r\n  update(Book:Book): Observable<Book>{\r\n    return this.http.put<Book> (\"http://localhost:8080/crudB/update\",Book)\r\n  }\r\n\r\n  delete(id: number) : Observable<Book> {\r\n    return this.http.delete<Book> (\"http://localhost:8080/crud/delete/\" + id);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}